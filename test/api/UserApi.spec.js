/*
 * Hume
 * This is an API for Hume
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto-generated by the Swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.32
 *
 * Do not edit the class manually.
 *
 */

// Import the module loader utility function
const configureModule = require('../moduleLoaderUtils');

// Use the module loader utility function to configure the module
configureModule(function () {
  'use strict';

  // Variable to hold an instance of the UserApi
  var instance;

  // Setup a new instance before each test
  beforeEach(function() {
    instance = new Hume.UserApi();
  });

  // Test suite for the UserApi
  describe('(package)', function() {
    describe('UserApi', function() {

      // Test case for the createUser method
      describe('createUser', function() {
        it('should call createUser successfully', function(done) {
          // TODO: uncomment, update parameter values for createUser call, and complete assertions
          /*
          var body = new Hume.CreateUserRequest();
          body.fullname = "";
          body.email = "";
          body.address = "";
          body.phone = "";
          body.city = "";
          body.username = "";
          body.password = "";

          instance.createUser(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });

      // Test case for the getUser method
      describe('getUser', function() {
        it('should call getUser successfully', function(done) {
          // TODO: uncomment, update parameter values for getUser call and complete the assertions
          /*
          var username = "username_example";

          instance.getUser(username, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Hume.UserResponse);
            expect(data.fullname).to.be.a('string');
            expect(data.fullname).to.be("");
            expect(data.email).to.be.a('string');
            expect(data.email).to.be("");
            expect(data.address).to.be.a('string');
            expect(data.address).to.be("");
            expect(data.phone).to.be.a('string');
            expect(data.phone).to.be("");
            expect(data.city).to.be.a('string');
            expect(data.city).to.be("");
            expect(data.username).to.be.a('string');
            expect(data.username).to.be("");
            expect(data.password).to.be.a('string');
            expect(data.password).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

});
