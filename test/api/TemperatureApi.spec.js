/*
 * Hume
 * This is an API for Hume
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto-generated by the Swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.32
 *
 * Do not edit the class manually.
 *
 */

// Import the module loader utility function
const configureModule = require('../moduleLoaderUtils');

// Use the module loader utility function to configure the module
configureModule(function () {

  'use strict';

  // Variable to hold an instance of the TemperatureApi
  var instance;

  // Setup a new instance before each test
  beforeEach(function() {
    instance = new Hume.TemperatureApi();
  });

  // Test suite for the TemperatureApi
  describe('(package)', function() {
    describe('TemperatureApi', function() {

      // Test case for the getTemp method
      describe('getTemp', function() {
        it('should call getTemp successfully', function(done) {
          // TODO: uncomment, update parameter values for getTemp call, and complete assertions
          /*
          var username = "username_example";
          var zoneId = 56;

          instance.getTemp(username, zoneId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Hume.TempResponse);
            expect(data.value).to.be.a('string');
            expect(data.value).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });

      // Test case for the modifyTemp method
      describe('modifyTemp', function() {
        it('should call modifyTemp successfully', function(done) {
          // TODO: uncomment, update parameter values for modifyTemp call
          /*
          var temperatureStatus = 1.2;
          var username = "username_example";
          var zoneId = 56;

          instance.modifyTemp(temperatureStatus, username, zoneId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

});
